
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        ListNode p1=null,p2=null;
        p1=head;
        p2=head;
        while(n--!=0){
            p1=p1.next;
        }
        ListNode prev=null;
        if(p2==head&&p1==null)
            return head.next;
        while(p1!=null){
            p1=p1.next;
            prev=p2;
            p2=p2.next;
        }
        ListNode next = p2.next;
        if(prev==null) return null;

        prev.next=next;
   
        
        return head;
    }
}
just skip the n nodes by our first pointer 
and start moving both pointers untill the first one end then thats it we are at the required nOde curios nth node from last is 
just l-n from front so the p1 goes till  l and p2 will be going to l-n
